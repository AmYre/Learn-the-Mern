{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\context\\\\GlobalContext.js\";\nimport React, { useState, createContext } from \"react\";\nexport const GlobalContext = createContext();\nexport const DataContext = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        services = _useState2[0],\n        setServices = _useState2[1];\n\n  fetch('http://localhost:5000/posts', {\n    mode: 'no-cors'\n  }).then(response => response.json()) // one extra step\n  .then(data => {\n    console.log(data);\n  }).catch(error => console.error(error));\n  return React.createElement(GlobalContext.Provider, {\n    value: [services, setServices],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/context/GlobalContext.js"],"names":["React","useState","createContext","GlobalContext","DataContext","props","services","setServices","fetch","mode","then","response","json","data","console","log","catch","error","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,aAAa,GAAGD,aAAa,EAAnC;AAEP,OAAO,MAAME,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACHJ,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QAC5BK,QAD4B;AAAA,QAClBC,WADkB;;AAGnCC,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAhC,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EACuC;AADvC,GAEEF,IAFF,CAEOG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAJF,EAKEG,KALF,CAKQC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAcA,KAAd,CALjB;AAOA,SACC,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACX,QAAD,EAAWC,WAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACa,QADR,CADD;AAKA,CAfM","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const GlobalContext = createContext()\r\n\r\nexport const DataContext = props => {\r\n\tconst [services, setServices] = useState([]);\r\n\t\r\n\tfetch('http://localhost:5000/posts', {mode: 'no-cors'})\r\n  .then(response => response.json())    // one extra step\r\n  .then(data => {\r\n    console.log(data) \r\n  })\r\n  .catch(error => console.error(error));\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={[services, setServices]}>\r\n\t\t\t{props.children}\r\n\t\t</GlobalContext.Provider>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}