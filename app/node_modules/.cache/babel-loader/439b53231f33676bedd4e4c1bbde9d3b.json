{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\context\\\\GlobalContext.js\";\nimport React, { useState, createContext } from \"react\";\nexport const GlobalContext = createContext();\nexport const DataContext = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        services = _useState2[0],\n        setServices = _useState2[1];\n\n  fetch('http://localhost:5000/posts').then(response => console.log(response)).then(data => {\n    console.log(data);\n    setServices([{\n      title: 'test',\n      name: 'dfdfdf'\n    }]);\n  });\n  return React.createElement(GlobalContext.Provider, {\n    value: [services, setServices],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/context/GlobalContext.js"],"names":["React","useState","createContext","GlobalContext","DataContext","props","services","setServices","fetch","then","response","console","log","data","title","name","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,aAAa,GAAGD,aAAa,EAAnC;AAEP,OAAO,MAAME,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACHJ,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QAC5BK,QAD4B;AAAA,QAClBC,WADkB;;AAGpCC,EAAAA,KAAK,CAAC,6BAAD,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADrB,EAEED,IAFF,CAEOI,IAAI,IACT;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACDN,IAAAA,WAAW,CAAC,CAAC;AAACO,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,IAAI,EAAC;AAApB,KAAD,CAAD,CAAX;AAA8C,GAJhD;AAOC,SACC,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACT,QAAD,EAAWC,WAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACW,QADR,CADD;AAKA,CAfM","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const GlobalContext = createContext()\r\n\r\nexport const DataContext = props => {\r\n\tconst [services, setServices] = useState([]);\r\n\r\nfetch('http://localhost:5000/posts')\r\n  \t.then(response => console.log(response))\r\n\t.then(data => \r\n\t\t{console.log(data);\r\n\t\tsetServices([{title:'test', name:'dfdfdf'}]) });\r\n\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={[services, setServices]}>\r\n\t\t\t{props.children}\r\n\t\t</GlobalContext.Provider>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}