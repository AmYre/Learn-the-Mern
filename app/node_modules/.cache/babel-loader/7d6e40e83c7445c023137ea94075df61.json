{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\components\\\\ServicesList.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst ServicesList = props => {\n  const _useContext = useContext(GlobalContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        services = _useContext2[0],\n        setServices = _useContext2[1];\n\n  const _useContext3 = useContext(GlobalContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        movies = _useContext4[0],\n        setMovies = _useContext4[1];\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginBottom: \"2rem\"\n    },\n    onClick: () => {\n      const namePrompt = prompt(\"Enter what U want\");\n\n      if (namePrompt) {\n        setServices([...services, {\n          id: Math.floor(Math.random() * (20000 - 9 + 1)) + 9,\n          name: namePrompt\n        }]);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Ajouter\"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"services-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, services.map(({\n    id,\n    name\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, name, React.createElement(Button, {\n    className: \"remove-btn\",\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => {\n      setServices(services.filter(service => service.id !== id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"X\")))))));\n};\n\nexport default ServicesList;","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/components/ServicesList.js"],"names":["React","useState","useContext","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","GlobalContext","ServicesList","props","services","setServices","movies","setMovies","marginBottom","namePrompt","prompt","id","Math","floor","random","name","map","filter","service"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,sBACGT,UAAU,CAACO,aAAD,CADb;AAAA;AAAA,QACtBG,QADsB;AAAA,QACZC,WADY;;AAAA,uBAEDX,UAAU,CAACO,aAAD,CAFT;AAAA;AAAA,QAEtBK,MAFsB;AAAA,QAEdC,SAFc;;AAI7B,SACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,MADP;AAEC,IAAA,KAAK,EAAE;AACNC,MAAAA,YAAY,EAAE;AADR,KAFR;AAKC,IAAA,OAAO,EAAE,MAAM;AACd,YAAMC,UAAU,GAAGC,MAAM,CAAC,mBAAD,CAAzB;;AACA,UAAID,UAAJ,EAAgB;AACfJ,QAAAA,WAAW,CAAC,CACX,GAAGD,QADQ,EAEX;AACCO,UAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,CAAR,GAAY,CAA7B,CAAX,IAA8C,CADnD;AAECC,UAAAA,IAAI,EAAEN;AAFP,SAFW,CAAD,CAAX;AAOA;AACD,KAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAqBC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,QAAQ,CAACY,GAAT,CAAa,CAAC;AAAEL,IAAAA,EAAF;AAAMI,IAAAA;AAAN,GAAD,KACb,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEJ,EAApB;AAAwB,IAAA,OAAO,EAAE,GAAjC;AAAsC,IAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEI,IADF,EAEC,oBAAC,MAAD;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,KAAK,EAAC,QAFP;AAGC,IAAA,IAAI,EAAC,IAHN;AAIC,IAAA,OAAO,EAAE,MAAM;AACdV,MAAAA,WAAW,CAACD,QAAQ,CAACa,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACP,EAAR,KAAeA,EAA1C,CAAD,CAAX;AACA,KANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,CADD,CADA,CADF,CADD,CArBD,CADD;AA6CA,CAjDD;;AAmDA,eAAeT,YAAf","sourcesContent":["import React, { useState, useContext } from \"react\"\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport { GlobalContext } from \"../context/GlobalContext\"\r\n\r\nconst ServicesList = props => {\r\n\tconst [services, setServices] = useContext(GlobalContext)\r\n\tconst [movies, setMovies] = useContext(GlobalContext)\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Button\r\n\t\t\t\tcolor=\"dark\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginBottom: \"2rem\"\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tconst namePrompt = prompt(\"Enter what U want\")\r\n\t\t\t\t\tif (namePrompt) {\r\n\t\t\t\t\t\tsetServices([\r\n\t\t\t\t\t\t\t...services,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: Math.floor(Math.random() * (20000 - 9 + 1)) + 9,\r\n\t\t\t\t\t\t\t\tname: namePrompt\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAjouter\r\n\t\t\t</Button>\r\n\t\t\t<ListGroup>\r\n\t\t\t\t<TransitionGroup className=\"services-list\">\r\n\t\t\t\t\t{services.map(({ id, name }) => (\r\n\t\t\t\t\t\t<CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n\t\t\t\t\t\t\t<ListGroupItem className=\"list\">\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetServices(services.filter(service => service.id !== id))\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ListGroup>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ServicesList\r\n"]},"metadata":{},"sourceType":"module"}