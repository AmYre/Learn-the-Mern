{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\context\\\\GlobalContext.js\";\nimport React, { useState, createContext } from \"react\";\nimport axios from 'axios';\nexport const GlobalContext = createContext();\nexport const DataContext = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  axios.get('http://localhost:5000/posts', {\n    mode: 'no-cors'\n  }).then(response => {\n    setData(response.data);\n    console.log(data);\n  }, error => {\n    console.log(error);\n  });\n\n  const _useState3 = useState(data),\n        _useState4 = _slicedToArray(_useState3, 2),\n        services = _useState4[0],\n        setServices = _useState4[1];\n\n  return React.createElement(GlobalContext.Provider, {\n    value: [services, setServices],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/context/GlobalContext.js"],"names":["React","useState","createContext","axios","GlobalContext","DataContext","props","data","setData","get","mode","then","response","console","log","error","services","setServices","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGF,aAAa,EAAnC;AAEP,OAAO,MAAMG,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACXL,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,QAC5BM,IAD4B;AAAA,QACtBC,OADsB;;AAGnCL,EAAAA,KAAK,CAACM,GAAN,CAAU,6BAAV,EAAyC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAzC,EACCC,IADD,CACMC,QAAQ,IAAI;AACjBJ,IAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,GAJD,EAIGQ,KAAK,IAAI;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,GAND;;AAHmC,qBAWHd,QAAQ,CAACM,IAAD,CAXL;AAAA;AAAA,QAW5BS,QAX4B;AAAA,QAWlBC,WAXkB;;AAgBnC,SACC,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACD,QAAD,EAAWC,WAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEX,KAAK,CAACY,QADR,CADD;AAKA,CArBM","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const GlobalContext = createContext()\r\n\r\nexport const DataContext = props => {\r\n\tconst [data, setData] = useState([]);\r\n\r\n\taxios.get('http://localhost:5000/posts', {mode:'no-cors'})\r\n\t.then(response => {\r\n\t\tsetData(response.data);\r\n\t\tconsole.log(data);\r\n\t}, error => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\r\n\tconst [services, setServices] = useState(data);\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={[services, setServices]}>\r\n\t\t\t{props.children}\r\n\t\t</GlobalContext.Provider>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}