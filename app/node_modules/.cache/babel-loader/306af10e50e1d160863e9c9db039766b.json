{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\components\\\\ServicesList.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport { ActionAddMovie } from '../reducers/addMovies';\nimport { useDispatch } from 'react-redux';\n\nconst ServicesList = props => {\n  const _useContext = useContext(GlobalContext),\n        _useContext2 = _slicedToArray(_useContext, 4),\n        services = _useContext2[0],\n        setServices = _useContext2[1],\n        movies = _useContext2[2],\n        setMovies = _useContext2[3];\n\n  const dispatch = useDispatch();\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"services-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, services.map(({\n    id,\n    name\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, name, React.createElement(Button, {\n    className: 'remove-btn' + id,\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => {\n      setServices(services.filter(service => service.id !== id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"X\")))))), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"movies-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, movies.map(({\n    id,\n    name\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, name, React.createElement(Button, {\n    className: 'remove-btn' + id,\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => dispatch(ActionAddMovie),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"X\")))))));\n};\n\nexport default ServicesList;","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/components/ServicesList.js"],"names":["React","useState","useContext","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","GlobalContext","ActionAddMovie","useDispatch","ServicesList","props","services","setServices","movies","setMovies","dispatch","map","id","name","filter","service"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,sBACsBX,UAAU,CAACO,aAAD,CADhC;AAAA;AAAA,QACtBK,QADsB;AAAA,QACZC,WADY;AAAA,QACCC,MADD;AAAA,QACSC,SADT;;AAE7B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,SACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,QAAQ,CAACK,GAAT,CAAa,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KACb,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED,EAApB;AAAwB,IAAA,OAAO,EAAE,GAAjC;AAAsC,IAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,IADF,EAEC,oBAAC,MAAD;AACC,IAAA,SAAS,EAAE,eAAaD,EADzB;AAEC,IAAA,KAAK,EAAC,QAFP;AAGC,IAAA,IAAI,EAAC,IAHN;AAIC,IAAA,OAAO,EAAE,MAAM;AACdL,MAAAA,WAAW,CAACD,QAAQ,CAACQ,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA1C,CAAD,CAAX;AACA,KANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,CADD,CADA,CADF,CADD,CADD,EAqBC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED,EAApB;AAAwB,IAAA,OAAO,EAAE,GAAjC;AAAsC,IAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,IADF,EAEC,oBAAC,MAAD;AACC,IAAA,SAAS,EAAE,eAAaD,EADzB;AAEC,IAAA,KAAK,EAAC,QAFP;AAGC,IAAA,IAAI,EAAC,IAHN;AAIC,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACR,cAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,CADD,CADA,CADF,CADD,CArBD,CADD;AA0CA,CA9CD;;AAgDA,eAAeE,YAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport {ActionAddMovie} from '../reducers/addMovies';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nconst ServicesList = props => {\r\n\tconst [services, setServices, movies, setMovies] = useContext(GlobalContext);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ListGroup>\r\n\t\t\t\t<TransitionGroup className=\"services-list\">\r\n\t\t\t\t\t{services.map(({ id, name }) => (\r\n\t\t\t\t\t\t<CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n\t\t\t\t\t\t\t<ListGroupItem className=\"list\">\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={'remove-btn'+id}\r\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetServices(services.filter(service => service.id !== id));\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ListGroup>\r\n\t\t\t<ListGroup>\r\n\t\t\t\t<TransitionGroup className=\"movies-list\">\r\n\t\t\t\t\t{movies.map(({ id, name }) => (\r\n\t\t\t\t\t\t<CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n\t\t\t\t\t\t\t<ListGroupItem className=\"list\">\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={'remove-btn'+id}\r\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(ActionAddMovie) }>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ListGroup>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ServicesList;\r\n"]},"metadata":{},"sourceType":"module"}