{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport const ActionAddMovie = (id, name) => {\n  return {\n    type: 'ADD_MOVIE',\n    payload: {\n      id,\n      name\n    }\n  };\n};\nexport const ActionDelMovie = id => {\n  return {\n    type: 'DEL_MOVIE',\n    payload: id\n  };\n};\n/*     \r\n\r\nconst localState = [  \r\n    {id: 1, name: \"La Ligne Verte\"} ,\r\n    {id: 2, name: \"Independance Day\"} ,\r\n    {id: 3, name: \"Star Wars\"} ,\r\n    {id: 4, name: \"Bienvenue à Gattaga\"} \r\n] */\n\nconst moviesInit = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/posts').then(response => setMovies(response.data));\n  }, []);\n\n  const moviesReducer = (state = response.data, action) => {\n    switch (action.type) {\n      case 'ADD_MOVIE':\n        return [...state, action.payload];\n\n      case 'DEL_MOVIE':\n        return state.filter(movie => movie.id !== action.payload);\n\n      default:\n        return state;\n    }\n  };\n};\n\nexport default moviesReducer;","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/reducers/addMovies.js"],"names":["ActionAddMovie","id","name","type","payload","ActionDelMovie","moviesInit","props","useState","movies","setMovies","useEffect","axios","get","then","response","data","moviesReducer","state","action","filter","movie"],"mappings":";AACA,OAAO,MAAMA,cAAc,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAE;AAACH,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFN,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,cAAc,GAAIJ,EAAD,IAAQ;AAClC,SAAO;AACHE,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAKH,CANM;AASP;;;;;;;;;AAUA,MAAMK,UAAU,GAAIC,KAAD,IAAW;AAAA,oBAEEC,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEnBC,MAFmB;AAAA,QAEXC,SAFW;;AAI7BC,EAAAA,SAAS,CAAE,MAAM;AAChBC,IAAAA,KAAK,CAACC,GAAN,CAAU,6BAAV,EACEC,IADF,CACQC,QAAQ,IAAIL,SAAS,CAACK,QAAQ,CAACC,IAAV,CAD7B;AAEK,GAHG,EAGD,EAHC,CAAT;;AAKG,QAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,QAAQ,CAACC,IAAlB,EAAwBG,MAAxB,KAAmC;AAErD,YAAQA,MAAM,CAAChB,IAAf;AAEI,WAAK,WAAL;AACI,eAAO,CAAC,GAAGe,KAAJ,EAAWC,MAAM,CAACf,OAAlB,CAAP;;AAEJ,WAAK,WAAL;AACI,eAAOc,KAAK,CAACE,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACpB,EAAN,KAAakB,MAAM,CAACf,OAA1C,CAAP;;AACJ;AACI,eAAOc,KAAP;AARR;AAWH,GAbD;AAcH,CAvBD;;AAyBA,eAAeD,aAAf","sourcesContent":["\r\nexport const ActionAddMovie = (id, name) => {\r\n    return {\r\n        type: 'ADD_MOVIE',\r\n        payload: {id, name}\r\n    }\r\n    \r\n}\r\n\r\nexport const ActionDelMovie = (id) => {\r\n    return {\r\n        type: 'DEL_MOVIE',\r\n        payload: id\r\n    }\r\n    \r\n}\r\n\r\n\r\n/*     \r\n\r\nconst localState = [  \r\n    {id: 1, name: \"La Ligne Verte\"} ,\r\n    {id: 2, name: \"Independance Day\"} ,\r\n    {id: 3, name: \"Star Wars\"} ,\r\n    {id: 4, name: \"Bienvenue à Gattaga\"} \r\n] */\r\n\r\n\r\nconst moviesInit = (props) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n\tuseEffect( () => {\r\n\t\taxios.get('http://localhost:5000/posts')\r\n\t\t\t.then( response => setMovies(response.data) )\r\n      }, []);\r\n\r\n    const moviesReducer = (state = response.data, action) => {\r\n        \r\n        switch (action.type) \r\n        {\r\n            case 'ADD_MOVIE' :\r\n                return [...state, action.payload];\r\n                \r\n            case 'DEL_MOVIE' :\r\n                return state.filter(movie => movie.id !== action.payload);\r\n            default :\r\n                return state;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default moviesReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}