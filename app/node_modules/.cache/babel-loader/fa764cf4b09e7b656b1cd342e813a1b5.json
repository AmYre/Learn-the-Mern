{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\context\\\\GlobalContext.js\";\nimport React, { useState, createContext } from \"react\";\nlet data;\nconst url = 'http://localhost:5000/posts';\nconst options = {\n  method: 'GET',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n};\nfetch(url, options).then(response => {\n  console.log(response);\n  data = response;\n});\nexport const GlobalContext = createContext();\nexport const DataContext = props => {\n  const _useState = useState(data),\n        _useState2 = _slicedToArray(_useState, 2),\n        services = _useState2[0],\n        setServices = _useState2[1];\n\n  return React.createElement(GlobalContext.Provider, {\n    value: [services, setServices],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/context/GlobalContext.js"],"names":["React","useState","createContext","data","url","options","method","headers","fetch","then","response","console","log","GlobalContext","DataContext","props","services","setServices","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,IAAIC,IAAJ;AACA,MAAMC,GAAG,GAAG,6BAAZ;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,OAAO,EAAE;AACP,cAAU,kBADH;AAEP,oBAAgB;AAFT;AAFK,CAAhB;AAQAC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAAL,CACGI,IADH,CACQC,QAAQ,IAAI;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACCP,EAAAA,IAAI,GAAGO,QAAP;AACD,CAJH;AAMA,OAAO,MAAMG,aAAa,GAAGX,aAAa,EAAnC;AAEP,OAAO,MAAMY,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACHd,QAAQ,CAACE,IAAD,CADL;AAAA;AAAA,QAC5Ba,QAD4B;AAAA,QAClBC,WADkB;;AAKnC,SACC,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACD,QAAD,EAAWC,WAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACG,QADR,CADD;AAKA,CAVM","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nlet data;\r\nconst url = 'http://localhost:5000/posts';\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json;charset=UTF-8'\r\n  }\r\n};\r\n\r\nfetch(url, options)\r\n  .then(response => {\r\n\t  console.log(response);\r\n    data = response;\r\n  });\r\n\r\nexport const GlobalContext = createContext()\r\n\r\nexport const DataContext = props => {\r\n\tconst [services, setServices] = useState(data)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={[services, setServices]}>\r\n\t\t\t{props.children}\r\n\t\t</GlobalContext.Provider>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}