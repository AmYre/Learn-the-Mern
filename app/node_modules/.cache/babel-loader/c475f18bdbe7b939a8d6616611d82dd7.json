{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\Desktop\\\\mern\\\\app\\\\src\\\\components\\\\ServicesList.js\";\nimport React, { useState } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ServicesList = props => {\n  const _useState = useState([//CREATION\n  {\n    id: 1,\n    name: 'Site vitrine'\n  }, {\n    id: 2,\n    name: 'Site e-commerce'\n  }, {\n    id: 3,\n    name: 'Site de publication'\n  }, {\n    id: 4,\n    name: 'Application mobile native'\n  }, //EXISTANT\n  {\n    id: 5,\n    name: 'Modernisation de site existants (technique et/ou visuelle)'\n  }, {\n    id: 6,\n    name: 'Site responsive toute taille d\\'écran '\n  }, {\n    id: 7,\n    name: 'Créer une Application de mon site existant'\n  }, //ENTREPRISE\n  {\n    id: 8,\n    name: 'Besoin d\\'un développeur ?'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        services = _useState2[0],\n        setServices = _useState2[1];\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginBottom: '2rem'\n    },\n    onClick: () => {\n      const namePrompt = prompt('Enter what U want');\n\n      if (namePrompt) {\n        setServices([...services, {\n          id: Math.floor(Math.random() * (20000 - 9 + 1)) + 9,\n          name: namePrompt\n        }]);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Ajouter\"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"services-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, services.map(({\n    id,\n    name\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, name, React.createElement(Button, {\n    className: \"remove-btn\",\n    style: {\n      marginLeft: '100%'\n    },\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => {\n      setServices(services.filter(service => service.id !== id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"X\")))))));\n};\n\nexport default ServicesList;","map":{"version":3,"sources":["C:/Users/AmYre/Desktop/mern/app/src/components/ServicesList.js"],"names":["React","useState","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","ServicesList","props","id","name","services","setServices","marginBottom","namePrompt","prompt","Math","floor","random","map","marginLeft","filter","service"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nconst ServicesList = props => {\r\n    const [services, setServices] = useState( [\r\n        //CREATION\r\n        {id:1, name:'Site vitrine'},\r\n        {id:2, name:'Site e-commerce'},\r\n        {id:3, name:'Site de publication'},\r\n        {id:4, name:'Application mobile native'},\r\n        //EXISTANT\r\n        {id:5, name:'Modernisation de site existants (technique et/ou visuelle)'},\r\n        {id:6, name:'Site responsive toute taille d\\'écran '},\r\n        {id:7, name:'Créer une Application de mon site existant'},\r\n        //ENTREPRISE\r\n        {id:8, name:'Besoin d\\'un développeur ?'},\r\n    ])\r\n\r\n    return (\r\n        <Container>\r\n            <Button \r\n                color=\"dark\"\r\n                style={{marginBottom: '2rem'}}\r\n                onClick={() => {\r\n                    const namePrompt = prompt('Enter what U want')\r\n                    if(namePrompt) {\r\n                        setServices([...services, { id: Math.floor(Math.random() * (20000 - 9 + 1)) + 9, name:namePrompt }])\r\n                    }\r\n                }}>\r\n                Ajouter\r\n            </Button>\r\n            <ListGroup>\r\n                <TransitionGroup className=\"services-list\">\r\n                    {services.map( ({id, name}) => (\r\n                        <CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n                            <ListGroupItem>\r\n                                {name}\r\n                                <Button \r\n                                    className=\"remove-btn\"\r\n                                    style={{marginLeft: '100%'}}\r\n                                    color=\"danger\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => {\r\n                                        setServices(services.filter(service => service.id !== id))\r\n                                    }}>\r\n                                    X\r\n                                </Button>\r\n                            </ListGroupItem>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ServicesList;"]},"metadata":{},"sourceType":"module"}